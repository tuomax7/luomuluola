{"ast":null,"code":"var _jsxFileName = \"/Users/tuomasnummela/Desktop/Aalto-opinnot/2.vuosi/VJP/VJP-4/luomuluola/client/src/components/DirtyDozen.js\";\nimport React from \"react\";\nimport { Box, CssBaseline, Table, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport ReferenceLink from \"./ReferenceLink\";\nimport NavBar from \"./NavBar\";\n\n//had detectable amounts of pesticides\n//img-urlit tilalle?\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dirtyDozenData = [\"Strawberries\", \"Spinach\", \"Kale, Collards & Mustard Greens\", \"Peaches\", \"Pears\", \"Nectarines\", \"Apples\", \"Grapes\", \"Bell & Hot Peppers\", \"Cherries\", \"Blueberries\", \"Green beans\"];\nconst DirtyDozen = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          textAlign: \"center\",\n          children: \"The Dirty Dozen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \"The following 12 fruits & vegetables are the highest in pesticides measured by the\", \" \", /*#__PURE__*/_jsxDEV(ReferenceLink, {\n          url: \"https://www.ewg.org/foodnews/summary.php\",\n          label: \"Environmental Working Group\",\n          title: \"EWG Dirty Dozen 2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \", \"in USA. When you go shopping, try to buy at least these products organic!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        style: {\n          width: \"80%\",\n          columnGap: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: dirtyDozenData.map((foodName, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: 25,\n                children: [index + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: 30,\n                children: foodName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                component: \"img\",\n                sx: {\n                  width: 200\n                },\n                src: `/images/${foodName}.jpeg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"50%\",\n        children: [\"Read more about the Dirty Dozen and its counterpart the Clean Fifteen from\", \" \", /*#__PURE__*/_jsxDEV(ReferenceLink, {\n          url: \"https://www.ewg.org/foodnews/summary.php\",\n          label: \"here!\",\n          title: \"EWG Dirty Dozen 2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = DirtyDozen;\nexport default DirtyDozen;\nvar _c;\n$RefreshReg$(_c, \"DirtyDozen\");","map":{"version":3,"names":["React","Box","CssBaseline","Table","TableBody","TableRow","TableCell","Typography","ReferenceLink","NavBar","jsxDEV","_jsxDEV","dirtyDozenData","DirtyDozen","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","alignItems","minHeight","width","variant","textAlign","url","label","title","style","columnGap","map","foodName","index","fontSize","component","sx","src","_c","$RefreshReg$"],"sources":["/Users/tuomasnummela/Desktop/Aalto-opinnot/2.vuosi/VJP/VJP-4/luomuluola/client/src/components/DirtyDozen.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  CssBaseline,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@mui/material\";\n\nimport ReferenceLink from \"./ReferenceLink\";\nimport NavBar from \"./NavBar\";\n\n//had detectable amounts of pesticides\n//img-urlit tilalle?\nconst dirtyDozenData = [\n  \"Strawberries\",\n  \"Spinach\",\n  \"Kale, Collards & Mustard Greens\",\n  \"Peaches\",\n  \"Pears\",\n  \"Nectarines\",\n  \"Apples\",\n  \"Grapes\",\n  \"Bell & Hot Peppers\",\n  \"Cherries\",\n  \"Blueberries\",\n  \"Green beans\",\n];\n\nconst DirtyDozen = () => {\n  return (\n    <Box>\n      <CssBaseline />\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"100vh\"\n      >\n        <NavBar />\n        <Box width=\"50%\">\n          <Typography variant=\"h2\" textAlign=\"center\">\n            The Dirty Dozen\n          </Typography>\n          The following 12 fruits & vegetables are the highest in pesticides\n          measured by the{\" \"}\n          <ReferenceLink\n            url=\"https://www.ewg.org/foodnews/summary.php\"\n            label=\"Environmental Working Group\"\n            title=\"EWG Dirty Dozen 2023\"\n          />{\" \"}\n          in USA. When you go shopping, try to buy at least these products\n          organic!\n        </Box>\n        <Table style={{ width: \"80%\", columnGap: 0 }}>\n          <TableBody>\n            {dirtyDozenData.map((foodName, index) => (\n              <TableRow key={index}>\n                <TableCell>\n                  <Typography fontSize={25}>{index + 1}.</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography fontSize={30}>{foodName}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Box\n                    component=\"img\"\n                    sx={{\n                      width: 200,\n                    }}\n                    src={`/images/${foodName}.jpeg`}\n                  ></Box>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Box width=\"50%\">\n          Read more about the Dirty Dozen and its counterpart the Clean Fifteen\n          from{\" \"}\n          <ReferenceLink\n            url=\"https://www.ewg.org/foodnews/summary.php\"\n            label=\"here!\"\n            title=\"EWG Dirty Dozen 2023\"\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DirtyDozen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}